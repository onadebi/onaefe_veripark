@model LibraryManagement.Models.BorrowHistory
@{
    ViewBag.Title = "Borrow a book";
}
<h2>Borrow a book</h2>
@using LibraryManagement.Models
@if (Model.Customer != null)
{
    <p>
        <h3 class="warning">Error</h3>
        This book is already borrowed by
        @Html.ActionLink(Model.CustomerId.ToString(), "Details", "Customers", new { id = Model.CustomerId }, null). You cannot lend it to anyone else till it is return
    </p>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" }) @Html.HiddenFor(model => model.BookId) @Html.HiddenFor(model => model.BorrowDate) @Html.HiddenFor(model => model.ReturnDate)
        @Html.HiddenFor(model => model.RequiredReturnDate)
        <dl class="dl-horizontal">
            <dt>
                @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label col-md-2" })
            </dt>
            <dd>
                @Model.Book.Title
            </dd>
            <dt>
                @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
            </dt>

            <dd>
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </dd>
            <dt>
                Note:
            </dt>
            <dd>
                This book should be returned in 14 Calendar Days beyond which a fine of @Constants.Currency @Constants.FinePerDay will be levied
            </dd>
        </dl>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Borrow" class="btn btn-default" />
            </div>
        </div>


    }
}
<div>@Html.ActionLink("Back to Book List", "Index", "Books")</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}